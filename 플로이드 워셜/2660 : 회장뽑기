import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int[][] map = new int[N][N];

		for(int a = 0;a<N;a++){
			for (int b = 0;b<N;b++){
				map[a][b] = N;
			}
		}

		StringTokenizer st = new StringTokenizer(br.readLine());
		int first = Integer.parseInt(st.nextToken())-1;
		int second = Integer.parseInt(st.nextToken())-1;

		while(first >=0 && second >=0){
			map[first][second] = 1;
			map[second][first] = 1;
			st = new StringTokenizer(br.readLine());
			first = Integer.parseInt(st.nextToken())-1;
			second = Integer.parseInt(st.nextToken())-1;
		}
		int[] degree = new int[N];
		int minValue = Integer.MAX_VALUE;

		for(int k =0;k<N;k++){
			for(int a = 0;a<N;a++){
				if(a == k) continue;
				for (int b = 0;b<N;b++){
					if(a == b) continue;
					map[a][b] = Math.min(map[a][b], map[a][k] + map[k][b]);
				}
			}
		}
		for(int a = 0;a<N;a++){
			for (int b = 0;b<N;b++){
				if(a == b) continue;
				degree[a] = Math.max(degree[a], map[a][b]);
			}
			minValue = Math.min(minValue, degree[a]);
		}

		List<Integer> boss = new ArrayList<>();
		StringBuilder stringBuilder = new StringBuilder();
		for(int i = 0;i<N;i++){
			if(degree[i] == minValue){
				boss.add(i);
				stringBuilder.append(i+1).append(" ");
			}
		}

		System.out.println(minValue + " " + boss.size());
		System.out.println(stringBuilder.toString());


	}



}
