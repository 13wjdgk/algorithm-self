//풀이 설명
- 배열을 전체 탐색하고,각 배열의 탐색하고자 하는 숫자(i)보다 이전 배열(j,0<=j<i)에서 최대 합을 비교하여 현재 숫자의 최대 합을 계산

import java.util.*;
import java.io.*;

public class Main {



	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int[] nums = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();
		int[] dp  = new int[N];
		for(int i =0;i<N;i++){
			for(int j = i-1;j>=0;j--){
				if(nums[i]>nums[j]){
					dp[i] = Math.max(nums[i]+dp[j],dp[i]);
				}
			}
			if(dp[i]==0) dp[i] = nums[i];
		}
		System.out.println(Arrays.stream(dp).max().orElse(0));
	}




}
