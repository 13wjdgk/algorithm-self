import java.util.*;
import java.io.*;

class Main {
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());


		int[][] arr = new int[N][3];
		int[][] dp = new int[N][3];
		for(int n=0;n<N;n++){
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int c =0;c<3;c++){
				arr[n][c] = Integer.parseInt(st.nextToken());
			}
		}
		long ans = Long.MAX_VALUE;
		for(int k =0;k<3;k++){
			for(int i =0;i<3;i++){
				if(k!=i) dp[0][i] = Integer.MAX_VALUE;
				else dp[0][i] = arr[0][k];
			}
			for(int i =0;i<3;i++){
				if(k!=i) dp[1][i] = dp[0][k]+arr[1][i];
				else dp[1][i] = Integer.MAX_VALUE;
			}


			for(int i=2;i<N;i++){
				dp[i][0] = arr[i][0] + Math.min(dp[i-1][1],dp[i-1][2]);
				dp[i][1] = arr[i][1] + Math.min(dp[i-1][0],dp[i-1][2]);
				dp[i][2] = arr[i][2] + Math.min(dp[i-1][1],dp[i-1][0]);
			}
			if(k==0){
				ans = Math.min(ans,Math.min(dp[N-1][1],dp[N-1][2]));
			}else if(k==1){
				ans = Math.min(ans,Math.min(dp[N-1][0],dp[N-1][2]));
			}else if(k==2){
				ans = Math.min(ans,Math.min(dp[N-1][0],dp[N-1][1]));
			}

		}
		System.out.println(ans);

	}


}
