import java.io.BufferedReader;

import java.io.InputStreamReader;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		// PriorityQueue<int[]> q = new PriorityQueue<>((t1,t2)->{
		// 	int result = Integer.compare(t1[0],t2[0]);
		// 	if(result==0){
		// 		return Integer.compare(t1[1],t2[1]);
		// 	}
		// 	return result;
		// 	});
		int N = Integer.parseInt(br.readLine());
		int[][] q = new int[N][2];
		for(int i =0;i<N;i++){
			StringTokenizer st = new StringTokenizer(br.readLine());
			int[] time = new int[2];
			for(int j =0;j<2;j++){
				time[j] = Integer.parseInt(st.nextToken());
			}
			q[i] = time;
		}
		Arrays.sort(q,(t1,t2)->{
				int result = Integer.compare(t1[0],t2[0]);
				if(result==0){
					return Integer.compare(t1[1],t2[1]);
				}
				return result;
				});
		int cnt = 0;
		PriorityQueue<Integer> lastTime = new PriorityQueue<>();
		lastTime.add(0);
		for(int n =0;n<N;n++){
			int[] time = q[n];
			if(lastTime.peek()<=time[0]){
				lastTime.poll();
			}
			lastTime.add(time[1]);
		}
		System.out.println(lastTime.size());
	}
}


