import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	static int N;
	static char[][] board ;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		board = new char[N][N];
		int maxCandy = 0;

		for(int n =0;n<N;n++){
			String str = br.readLine();
			for(int i =0;i<N;i++) {
				board[n][i] = str.charAt(i);
			}
		}
		//아래 오른쪽
		int[] dx = {0,+1};
		int[] dy = {+1,0};
		for(int y =0;y<N;y++){
			for(int x =0;x<N;x++){
				char candy = board[y][x];
				for(int i =0;i<2;i++){
					int nextX = dx[i]+x;
					int nextY = dy[i] + y;
					if(0<=nextX&nextX<N&0<=nextY&nextY<N){
						char nextCandy = board[nextY][nextX];
						if(nextCandy != candy){
							swapCandy(nextY, nextX, candy, y, x, nextCandy);
							maxCandy = Math.max(maxCandy,checkMaxCandy());
							swapCandy(nextY, nextX, nextCandy, y, x, candy);
						}
					}
				}
			}
		}
		System.out.println(maxCandy);
	}

	private static void swapCandy(int nextY, int nextX, char candy, int y, int x, char nextCandy) {
		board[nextY][nextX] = candy;
		board[y][x] = nextCandy;
	}
	private static int checkMaxCandy() {
		int maxLen = 0;
		for(int i =0;i<N;i++){
			int countRow = 1;
			int countCol = 1;

			for(int j =1;j<N;j++){
				//행이 같은지
				if(board[i][j]==board[i][j-1]){
					countRow++;
				}else{
					countRow = 1;
				}

				//열이 같은지
				if(board[j][i]==board[j-1][i]){
					countCol++;
				}else{
					countCol = 1;
				}
				maxLen = Math.max(maxLen,countRow);
				maxLen = Math.max(maxLen,countCol);
			}
		}
		return maxLen;
	}
}
